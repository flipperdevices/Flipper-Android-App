[versions]
kotlin = "1.6.10"
kt_coroutines = "1.6.0"
ksp = "1.6.10-1.0.2"
serialization = "1.3.2"
anvil = "2.3.11-1-6-10"
android-gradle = "7.1.1"
protobuf = "3.19.4"
protobuf-gradle = "0.8.18"
# Temporary solution: please, change also in androidCompose.gradle.kts
compose = "1.1.0"
compose_accompanist = "0.23.0"
compose_constraint = "1.0.0"
room = "2.4.1"
# Crush after https://github.com/google/dagger/releases/tag/dagger-2.40.4
dagger = "2.40.3"
timber = "5.0.1"
timber-treessence = "1.0.5"
sentry = "5.6.1"
zip4j = "2.9.1"
seismic = "1.0.3"
cicerone = "7.1"
ktx = "1.7.0"
ktx-fragment = "1.4.1"
ktx-activity = "1.4.0"
ktx-testing = "1.1.3"
lifecycle = "2.4.1"
# https://github.com/vigna/fastutil/issues/136
fastutil = "7.2.1"
ble = "2.4.0-beta01"
ble-scan = "1.6.0"
lottie = "4.2.1"
material = "1.5.0"
annotations = "1.3.0"
appcompat = "1.4.1"

# Testing
junit = "4.12"
mockito = "4.0.0"
roboelectric = "4.6.1"

[libraries]
# Gradle - Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

kotlin-annotation-processing = { module = "org.jetbrains.kotlin:kotlin-annotation-processing-embeddable", version.ref = "kotlin" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-gradle-pluginApi = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kt_coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kt_coroutines" }

kotlin-serialization-gradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "serialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

protobuf-gradle = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobuf-gradle" }

# UI
material = { module = "com.google.android.material:material", version.ref = "material" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }

# UI - Compose Extension
compose-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "compose_accompanist" }
compose-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "compose_accompanist" }
compose-systemui = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "compose_accompanist" }
compose-swipetorefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "compose_accompanist" }
compose-constraint = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose_constraint" }

# Storage
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ksp = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Dependency Injection
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-kapt = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# Dependency Injection - Anvil
square-anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }
square-anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
square-anvil-compiler-core = { module = "com.squareup.anvil:compiler", version.ref = "anvil" }
square-anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
square-anvil-gradle = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }

# Navigation
cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }

# Bug report dependencies
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
timber-tressence = { module = "com.github.bastienpaulfr:Treessence", version.ref = "timber-treessence" }
sentry = { module = "io.sentry:sentry-android", version.ref = "sentry" }
sentry-timber = { module = "io.sentry:sentry-android-timber", version.ref = "sentry" }
zip4j = { module = "net.lingala.zip4j:zip4j", version.ref = "zip4j" }
seismic = { module = "com.squareup:seismic", version.ref = "seismic" }

# KTX
ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
ktx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "ktx-fragment" }
ktx-activity = { module = "androidx.activity:activity-ktx", version.ref = "ktx-activity" }
ktx-testing = { module = "androidx.test.ext:junit", version.ref = "ktx-testing" }

# Lifecycle
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
lifecycle-kapt = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycle" }
lifecycle-test = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle" }

# Utils
fastutil = { module = "it.unimi.dsi:fastutil", version.ref = "fastutil" }
annotations = { module = "androidx.annotation:annotation", version.ref = "annotations" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

# BLE
ble = { module = "no.nordicsemi.android:ble", version.ref = "ble" }
ble-common = { module = "no.nordicsemi.android:ble-common", version.ref = "ble" }
ble-scan = { module = "no.nordicsemi.android.support.v18:scanner", version.ref = "ble-scan" }

# Images
image-lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

# Protobuf
protobuf-javalite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }
roboelectric = { module = "org.robolectric:robolectric", version.ref = "roboelectric" }

[bundles]
