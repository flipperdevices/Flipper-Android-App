[versions]
# You also need to bump the version of ksp
kotlin-general = "2.0.20" # https://kotlinlang.org/docs/releases.html#release-details
kotlin-immutable-collections = "0.3.7" # https://github.com/Kotlin/kotlinx.collections.immutable/releases
kotlin-datetime = "0.6.1" # https://github.com/Kotlin/kotlinx-datetime/releases
kotlinx = "1.8.1" # https://github.com/Kotlin/kotlinx.coroutines/releases
ksp = "2.0.20-1.0.24" # https://github.com/google/ksp/releases
anvil = "2.5.0-beta11" # https://github.com/square/anvil/releases
anvil-utils = "0.2.1-beta01" # https://github.com/IlyaGulya/anvil-utils/releases
android-gradle = "8.6.0" # https://developer.android.com/studio/releases/gradle-plugin
protobuf = "4.28.0" # https://github.com/protocolbuffers/protobuf/releases
protobuf-gradle = "0.9.4" # https://github.com/google/protobuf-gradle-plugin/releases
compose-material = "1.6.8" # https://developer.android.com/jetpack/androidx/releases/compose#versions
compose-foundation = "1.6.8" # https://developer.android.com/jetpack/androidx/releases/compose#versions
compose-ui = "1.6.8" # https://developer.android.com/jetpack/androidx/releases/compose#versions
compose-wear = "1.3.1" # https://developer.android.com/jetpack/androidx/releases/wear-compose
compose-wear-preview = "1.0.0" # https://mvnrepository.com/artifact/androidx.wear/wear-tooling-preview
compose-accompanist = "0.34.0" # https://github.com/google/accompanist/releases
compose-placeholder = "2.0.0" # https://github.com/fornewid/placeholder/releases
compose-constraint = "1.0.1" # https://developer.android.com/jetpack/compose/layouts/constraintlayout
compose-paging = "3.3.2" # https://developer.android.com/jetpack/androidx/releases/paging
compose-drag-drop = "0.9.6" # https://github.com/aclassen/ComposeReorderable/releases
compose-multiplatform = "1.6.11" # https://github.com/JetBrains/compose-multiplatform/releases
# 0.6.17 requires androidx.navigation:navigation-compose:2.8.0-beta0
# androidx.navigation:navigation-compose:2.8.0-beta0 requires Android API 35
# Android API 35 not supported by roboelectric
horologist = "0.6.17" # https://github.com/google/horologist/releases
serialization-json = "1.7.2" # https://github.com/Kotlin/kotlinx.serialization/releases
wear = "1.3.0" # https://developer.android.com/jetpack/androidx/releases/wear
wear-gms = "18.2.0" # https://mvnrepository.com/artifact/com.google.android.gms/play-services-wearable?repo=google
wear-interaction-phone = "1.1.0-alpha04" # https://developer.android.com/jetpack/androidx/releases/wear
wear-interaction-remote = "1.0.0" # https://developer.android.com/jetpack/androidx/releases/wear
room = "2.6.1" # https://developer.android.com/jetpack/androidx/releases/room
dagger = "2.52" # https://github.com/google/dagger/releases
timber = "5.0.1" # https://github.com/JakeWharton/timber/releases
timber-treessence = "1.1.2" # https://github.com/bastienpaulfr/Treessence/tags
sentry-runtime = "7.14.0" # https://github.com/getsentry/sentry-java/releases
sentry-gradle = "4.11.0" # https://github.com/getsentry/sentry-android-gradle-plugin/releases
zip4j = "2.11.5" # https://github.com/srikanth-lingala/zip4j/releases
ktx = "1.13.1" # https://developer.android.com/jetpack/androidx/releases/core
ktx-activity = "1.9.1" # https://developer.android.com/jetpack/androidx/releases/activity
ktx-testing = "1.2.1" # https://developer.android.com/jetpack/androidx/releases/test
lifecycle = "2.8.4" # https://developer.android.com/jetpack/androidx/releases/lifecycle
fastutil = "8.5.14" # https://github.com/vigna/fastutil/tags
ble = "2.8.0" # https://github.com/NordicSemiconductor/Android-BLE-Library/releases
ble-scan = "1.6.0" # https://github.com/NordicSemiconductor/Android-Scanner-Compat-Library/releases
ble-kotlin = "1.1.0" # https://github.com/NordicSemiconductor/Kotlin-BLE-Library/releases
# don't update to 2.x, unless the ble-kotlin is also updated. PR: https://github.com/arcao/slf4j-timber/pull/12
slf4j = "1.7.36" # https://github.com/qos-ch/slf4j/tags
slf4j-timber = "3.1" # https://github.com/arcao/slf4j-timber
lottie = "6.5.1" # https://github.com/airbnb/lottie/blob/master/android-compose.md
material = "1.12.0" # https://github.com/material-components/material-components-android/releases
splashscreen = "1.1.0-rc01" # https://developer.android.com/jetpack/androidx/releases/core
annotations = "1.8.2" # https://developer.android.com/jetpack/androidx/releases/annotation
appcompat = "1.7.0" # https://developer.android.com/jetpack/androidx/releases/appcompat
datastore = "1.1.1" # https://developer.android.com/topic/libraries/architecture/datastore
# https://github.com/vsch/flexmark-java/issues/442
flexmark = "0.42.14" # https://github.com/vsch/flexmark-java/tags
markdown = "0.25.0" # https://github.com/mikepenz/multiplatform-markdown-renderer/releases
ktor = "2.3.12" # https://ktor.io/
apache-compress = "1.27.1" # https://commons.apache.org/proper/commons-compress/
apache-codec = "1.17.1" # https://mvnrepository.com/artifact/commons-codec/commons-codec
countly = "24.7.2" # https://github.com/Countly/countly-sdk-android/releases
grgit-gradle = "8d818b74b9"
work = "2.9.1" # https://developer.android.com/jetpack/androidx/releases/work
coil = "2.7.0" # https://github.com/coil-kt/coil/releases
play-core = "2.1.0" # https://developer.android.com/guide/playcore#java-kotlin-in-app-update
decompose = "3.1.0" # https://github.com/arkivanov/Decompose/releases
essenty = "2.1.0" # https://github.com/arkivanov/Essenty/releases
zoomable = "1.6.1" #https://github.com/usuiat/Zoomable
# Testing
junit = "4.13.2" # https://github.com/junit-team/junit4/releases
mockito = "5.4.0" # https://github.com/mockito/mockito/releases
roboelectric = "4.13" # https://github.com/robolectric/robolectric/releases
mockk = "1.13.12" # https://mockk.io/

# Testing UI
espresso-core = "3.6.1" # https://github.com/android/android-test
uiautomator = "2.3.0" # https://developer.android.com/training/testing/other-components/ui-automator#set-ui
benchmark-macro-junit4 = "1.3.0" # https://developer.android.com/jetpack/androidx/releases/benchmark
baselineprofile = "1.3.0" # https://developer.android.com/topic/performance/baselineprofiles/overview#recommended-versions
profileinstaller = "1.3.1" # https://developer.android.com/topic/performance/baselineprofiles/overview#recommended-versions

# Linters
detekt = "1.23.6" # https://detekt.dev/docs/gettingstarted/gradle/
detekt-ruleset-compiler = "0.0.4" # https://github.com/BraisGabin/detekt-compiler-rules/releases
detekt-ruleset-ktlint = "0.50.0" # https://github.com/pinterest/ktlint/releases
detekt-ruleset-compose = "0.4.11" # https://github.com/mrmans0n/compose-rules/releases
detekt-ruleset-decompose = "1.0.1" # https://github.com/LionZXY/detekt-decompose-rule/releases

# Firebase
google-gms-gradle = "4.4.2" # https://developers.google.com/android/guides/google-services-plugin
google-gms-firebase = "24.0.1" # https://firebase.google.com/docs/android/setup#kotlin:~:text=com.google.firebase%3Afirebase%2Dmessaging

# Build Config
buildkonfig = "5.4.0"

wire = "5.0.0"
okio = "3.9.0"

[libraries]
# Gradle - Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
kotlin-jvm-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-general" }

kotlin-annotation-processing = { module = "org.jetbrains.kotlin:kotlin-annotation-processing-embeddable", version.ref = "kotlin-general" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin-general" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-general" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-general" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin-general" }

grgit-gradle = { module = "com.github.LionZXY:grgit", version.ref = "grgit-gradle" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx" }
kotlin-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx" }

kotlin-serialization-gradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-general" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }

kotlin-immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutable-collections" }

kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }

protobuf-gradle = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobuf-gradle" }
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }

# Linters
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-ruleset-compiler = { module = "com.braisgabin.detekt:kotlin-compiler-wrapper", version.ref = "detekt-ruleset-compiler" }
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-ruleset-compose" }
detekt-ruleset-decompose = { module = "uk.kulikov.detekt.decompose:decompose-detekt-rules", version.ref = "detekt-ruleset-decompose" }

# UI
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "ktx-activity" }
material = { module = "com.google.android.material:material", version.ref = "material" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-foundation" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-material" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose-material" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-material" }

# UI - Wear
compose-wear-material = { module = "androidx.wear.compose:compose-material", version.ref = "compose-wear" }
compose-wear-foundation = { module = "androidx.wear.compose:compose-foundation", version.ref = "compose-wear" }
compose-wear-preview = { module = "androidx.wear:wear-tooling-preview", version.ref = "compose-wear-preview" }
horologist-layout = { module = "com.google.android.horologist:horologist-compose-layout", version.ref = "horologist" }

# UI - Compose Extension
compose-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "compose-accompanist" }
compose-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "compose-accompanist" }
compose-placeholder = { module = "io.github.fornewid:placeholder-foundation", version.ref = "compose-placeholder" }
compose-swipetorefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "compose-accompanist" }
compose-constraint = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraint" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "compose-paging" }
compose-drag-drop = { module = "org.burnoutcrew.composereorderable:reorderable", version.ref = "compose-drag-drop" }

# UI - Compose multiplatform
compose-multiplatform-gradle = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
compose-gradle = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin-general" }


# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }

# Markdown
flexmark-core = { module = "com.vladsch.flexmark:flexmark", version.ref = "flexmark" }
markdown-renderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }

# Storage
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ksp = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Dependency Injection
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-kapt = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

anvil-utils-annotations = { module = "me.gulya.anvil:annotations", version.ref = "anvil-utils" }
anvil-utils-compiler = { module = "me.gulya.anvil:compiler", version.ref = "anvil-utils" }

# Dependency Injection - Anvil
square-anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }
square-anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
square-anvil-compiler-core = { module = "com.squareup.anvil:compiler", version.ref = "anvil" }
square-anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
square-anvil-gradle = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }

# Bug report dependencies
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
timber-tressence = { module = "com.github.bastienpaulfr:Treessence", version.ref = "timber-treessence" }
sentry = { module = "io.sentry:sentry-android", version.ref = "sentry-runtime" }
sentry-gradle = { module = "io.sentry:sentry-android-gradle-plugin", version.ref = "sentry-gradle" }
sentry-timber = { module = "io.sentry:sentry-android-timber", version.ref = "sentry-runtime" }
zip4j = { module = "net.lingala.zip4j:zip4j", version.ref = "zip4j" }
countly = { module = "ly.count.android:sdk", version.ref = "countly" }
slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
slf4j-timber = { group = "com.arcao", name = "slf4j-timber", version.ref = "slf4j-timber" }

# KTX
ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
ktx-activity = { module = "androidx.activity:activity-ktx", version.ref = "ktx-activity" }
ktx-testing = { module = "androidx.test.ext:junit", version.ref = "ktx-testing" }

# Lifecycle
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
lifecycle-test = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle" }

# Utils
fastutil = { module = "it.unimi.dsi:fastutil", version.ref = "fastutil" }
annotations = { module = "androidx.annotation:annotation", version.ref = "annotations" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

# Ktor
ktor-client = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# Apache commons
apache-compress = { module = "org.apache.commons:commons-compress", version.ref = "apache-compress" }
apache-codec = { module = "commons-codec:commons-codec", version.ref = "apache-codec" }

# BLE
ble = { module = "no.nordicsemi.android:ble", version.ref = "ble" }
ble-common = { module = "no.nordicsemi.android:ble-common", version.ref = "ble" }
ble-scan = { module = "no.nordicsemi.android.support.v18:scanner", version.ref = "ble-scan" }
ble-kotlin-scanner = { module = "no.nordicsemi.android.kotlin.ble:scanner", version.ref = "ble-kotlin" }
ble-kotlin-client = { module = "no.nordicsemi.android.kotlin.ble:client", version.ref = "ble-kotlin" }

# Images
image-lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

# Protobuf
protobuf-kotlinlite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" } # deprecated
roboelectric = { module = "org.robolectric:robolectric", version.ref = "roboelectric" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# Testing UI
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
benchmark-macro-junit4 = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "benchmark-macro-junit4" }
profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "profileinstaller" }

# Wear
wear = { module = "androidx.wear:wear", version.ref = "wear" }
wear-gms = { module = "com.google.android.gms:play-services-wearable", version.ref = "wear-gms" }
wear-interaction-phone = { module = "androidx.wear:wear-phone-interactions", version.ref = "wear-interaction-phone" }
wear-interaction-remote = { module = "androidx.wear:wear-remote-interactions", version.ref = "wear-interaction-remote" }

# Work manager
work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

# Google play core
app-update = { module = "com.google.android.play:app-update", version.ref = "play-core" }
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "play-core" }
gms-firebase = { module = "com.google.firebase:firebase-messaging", version.ref = "google-gms-firebase" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetpack = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }

zoomable = { module = "net.engawapg.lib:zoomable", version.ref = "zoomable" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

[bundles]
decompose = ["decompose", "decompose-jetpack"]
essenty = ["essenty-lifecycle", "essenty-lifecycle-coroutines"]

[plugins]
android-app = { id = "com.android.application", version.ref = "android-gradle" }
android-lib = { id = "com.android.library", version.ref = "android-gradle" }
android-test = { id = "com.android.test", version.ref = "android-gradle" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-general" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-general" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-gradle" }
square-anvil = { id = "com.squareup.anvil", version.ref = "anvil" }
google-gms = { id = "com.google.gms.google-services", version.ref = "google-gms-gradle" }
baselineprofile = { id = "androidx.baselineprofile", version.ref = "baselineprofile" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin-general" }
buildkonfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildkonfig" }
wire = { id = "com.squareup.wire", version.ref = "wire" }
