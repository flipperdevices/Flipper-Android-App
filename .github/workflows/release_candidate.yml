name: Build and publish Release Candidate

on:
  push:
    branches:
      - 'rc'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
      - name: Build internal release
        run: |
          ./gradlew clean
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal \
            -Dversion_code=${{ steps.buildnumber.outputs.build_number }} \
            -Dversion_name="${{ steps.vars.outputs.major_version }}-internal-rc"
      - name: Build production release
        run: |
          ./gradlew clean
          ./gradlew :instances:app:assembleRelease :instances:app:bundleRelease \
            -Dversion_code=${{ steps.buildnumber.outputs.build_number }} \
            -Dversion_name="${{ steps.vars.outputs.major_version }}-rc"
      - name: Sign internal AAB
        id: sign_aab_internal
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign internal APK
        id: sign_apk_internal
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign release AAB
        id: sign_aab_release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign release APK
        id: sign_apk_release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Copy artifacts
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab_internal.outputs.signedReleaseFile }} artifacts/flipper-zero-internal.aab
          cp ${{ steps.sign_apk_internal.outputs.signedReleaseFile }} artifacts/flipper-zero-internal.apk
          cp ${{ steps.sign_aab_release.outputs.signedReleaseFile }} artifacts/flipper-zero-release.aab
          cp ${{ steps.sign_apk_release.outputs.signedReleaseFile }} artifacts/flipper-zero-release.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-internal.txt
          cp instances/app/build/outputs/mapping/release/mapping.txt artifacts/mapping-release.txt
          echo "::set-output name=path::artifacts/"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ${{ steps.artifacts_copy.outputs.path }}
  upload_to_firebase:
    name: Upload to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: artifacts
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: ${{steps.download.outputs.download-path}}/flipper-zero-internal.aab
      - name: Upload artifact to release candidate group
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: release-candidate
          file: ${{steps.download.outputs.download-path}}/flipper-zero-release.aab