name: 'Build and publish Release Candidate'

on:
  push:
    branches:
      - 'rc'

jobs:
  build_number:
    name: 'Generate build number'
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.vars.outputs.number }}
    steps:
      - name: 'Generate build number'
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Set variables'
        id: vars
        run: |
          echo "number=${{ steps.buildnumber.outputs.build_number }}" >> $GITHUB_OUTPUT

  build_internal_nogms:
    name: 'Build Internal AAB and APK (Without GMS)'
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "major_version=${MAJOR_VERSION}" >> $GITHUB_OUTPUT
          echo "minor_version=${{ needs.build_number.outputs.number_wearos }}" >> $GITHUB_OUTPUT

      - name: 'Build internal release'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal \
            "-Dversion_code=${{ steps.vars.outputs.minor_version }}" \
            "-Dversion_name=${{ steps.vars.outputs.major_version }}-rc" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=false

      - name: 'Sign AAB'
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign APK'
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Copy artifacts'
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-nogms.txt
          echo "path=artifacts/" >> $GITHUB_OUTPUT

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-internal-nogms
          path: ${{ steps.artifacts_copy.outputs.path }}

  build_internal_gms:
    name: 'Build Internal AAB and APK (GMS)'
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "major_version=${MAJOR_VERSION}" >> $GITHUB_OUTPUT
          echo "minor_version=${{ needs.build_number.outputs.number_wearos }}" >> $GITHUB_OUTPUT

      - name: 'Build internal release'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal :instances:wearable:assembleInternal :instances:wearable:bundleInternal \
            "-Dversion_code=${{ steps.vars.outputs.minor_version }}" \
            "-Dversion_name=${{ steps.vars.outputs.major_version }}-rc" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=true

      - name: 'Sign AAB'
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign APK'
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign Wear AAB'
        id: sign_wear_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign Wear APK'
        id: sign_wear_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Copy artifacts'
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-gms.txt
          cp ${{ steps.sign_wear_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.aab
          cp ${{ steps.sign_wear_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.apk
          cp instances/wearable/build/outputs/mapping/internal/mapping.txt artifacts/mapping-wear-gms.txt
          echo "path=artifacts/" >> $GITHUB_OUTPUT

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-internal-gms
          path: ${{ steps.artifacts_copy.outputs.path }}

  build_release_nogms:
    name: 'Build Release AAB and APK (Without GMS)'
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "major_version=${MAJOR_VERSION}" >> $GITHUB_OUTPUT
          echo "minor_version=${{ needs.build_number.outputs.number }}" >> $GITHUB_OUTPUT

      - name: 'Build release'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleRelease :instances:app:bundleRelease \
            "-Dversion_code=${{ steps.vars.outputs.minor_version }}" \
            "-Dversion_name=${{ steps.vars.outputs.major_version }}-rc" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=false

      - name: 'Sign AAB'
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign APK'
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Copy artifacts'
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.apk
          cp instances/app/build/outputs/mapping/release/mapping.txt artifacts/mapping-nogms.txt
          echo "path=artifacts/" >> $GITHUB_OUTPUT

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-release-nogms
          path: ${{ steps.artifacts_copy.outputs.path }}

  build_release_gms:
    name: 'Build Release AAB and APK (GMS)'
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "major_version=${MAJOR_VERSION}" >> $GITHUB_OUTPUT
          echo "minor_version=${{ needs.build_number.outputs.number }}" >> $GITHUB_OUTPUT

      - name: 'Build release'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleRelease :instances:app:bundleRelease :instances:wearable:assembleRelease :instances:wearable:bundleRelease \
            "-Dversion_code=${{ steps.vars.outputs.minor_version }}" \
            "-Dversion_name=${{ steps.vars.outputs.major_version }}-rc" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=true

      - name: 'Sign AAB'
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign APK'
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign Wear AAB'
        id: sign_wear_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Sign Wear APK'
        id: sign_wear_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}

      - name: 'Copy artifacts'
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.apk
          cp instances/app/build/outputs/mapping/release/mapping.txt artifacts/mapping-gms.txt
          cp ${{ steps.sign_wear_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.aab
          cp ${{ steps.sign_wear_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.apk
          cp instances/wearable/build/outputs/mapping/release/mapping.txt artifacts/mapping-wear-gms.txt
          echo "path=artifacts/" >> $GITHUB_OUTPUT

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-release-gms
          path: ${{ steps.artifacts_copy.outputs.path }}

  upload_to_github:
    name: 'Upload to Github Releases'
    runs-on: ubuntu-latest
    needs: [ build_internal_nogms, build_internal_gms, build_release_nogms, build_release_gms ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/download-artifact@v3
        id: download-internal-gms
        with:
          name: artifacts-internal-nogms

      - uses: actions/download-artifact@v2
        id: download-internal-nogms
        with:
          name: artifacts-internal-nogms

      - uses: actions/download-artifact@v2
        id: download-release-gms
        with:
          name: artifacts-release-gms

      - uses: actions/download-artifact@v2
        id: download-release-nogms
        with:
          name: artifacts-release-nogms

      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "major_version=${MAJOR_VERSION}" >> $GITHUB_OUTPUT

      - name: 'Install zip'
        uses: montudor/action-zip@v1

      - name: 'Prepare mapping'
        id: mappings
        run: |
          mkdir mappings
          cp ${{steps.download-internal-nogms.outputs.download-path}}/mapping-nogms.txt mappings/mapping-internal-nogms.txt
          cp ${{steps.download-internal-gms.outputs.download-path}}/mapping-gms.txt mappings/mapping-internal-gms.txt
          cp ${{steps.download-internal-gms.outputs.download-path}}/mapping-wear-gms.txt mappings/mapping-internal-wear-gms.txt
          cp ${{steps.download-release-nogms.outputs.download-path}}/mapping-nogms.txt mappings/mapping-release-nogms.txt
          cp ${{steps.download-release-gms.outputs.download-path}}/mapping-gms.txt mappings/mapping-release-gms.txt
          cp ${{steps.download-release-gms.outputs.download-path}}/mapping-wear-gms.txt mappings/mapping-release-wear-gms.txt
          zip -qq -r mappings.zip mappings
          echo "archive=mappings.zip" >> $GITHUB_OUTPUT

      - name: 'Copy artifacts'
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.mappings.outputs.archive }} artifacts/mappings-${{ steps.vars.outputs.major_version }}-rc.zip
          cp ${{steps.download-internal-gms.outputs.download-path}}/flipper-zero-gms.aab artifacts/flipper-zero-internal-gms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-internal-gms.outputs.download-path}}/flipper-zero-gms.apk artifacts/flipper-zero-internal-gms-${{ steps.vars.outputs.major_version }}-rc.apk
          cp ${{steps.download-internal-gms.outputs.download-path}}/flipper-zero-wear-gms.aab artifacts/flipper-zero-internal-wear-gms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-internal-gms.outputs.download-path}}/flipper-zero-wear-gms.apk artifacts/flipper-zero-internal-wear-gms-${{ steps.vars.outputs.major_version }}-rc.apk
          cp ${{steps.download-internal-nogms.outputs.download-path}}/flipper-zero-nogms.aab artifacts/flipper-zero-internal-nogms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-internal-nogms.outputs.download-path}}/flipper-zero-nogms.apk artifacts/flipper-zero-internal-nogms-${{ steps.vars.outputs.major_version }}-rc.apk
          cp ${{steps.download-release-gms.outputs.download-path}}/flipper-zero-gms.aab artifacts/flipper-zero-release-gms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-release-gms.outputs.download-path}}/flipper-zero-gms.apk artifacts/flipper-zero-release-gms-${{ steps.vars.outputs.major_version }}-rc.apk
          cp ${{steps.download-release-gms.outputs.download-path}}/flipper-zero-wear-gms.aab artifacts/flipper-zero-release-wear-gms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-release-gms.outputs.download-path}}/flipper-zero-wear-gms.apk artifacts/flipper-zero-release-wear-gms-${{ steps.vars.outputs.major_version }}-rc.apk
          cp ${{steps.download-release-nogms.outputs.download-path}}/flipper-zero-nogms.aab artifacts/flipper-zero-release-nogms-${{ steps.vars.outputs.major_version }}-rc.aab
          cp ${{steps.download-release-nogms.outputs.download-path}}/flipper-zero-nogms.apk artifacts/flipper-zero-release-nogms-${{ steps.vars.outputs.major_version }}-rc.apk
          echo "path=artifacts/" >> $GITHUB_OUTPUT

      - name: 'Create Release Candidate'
        id: create_internal_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.artifacts_copy.outputs.path }}/mappings-${{ steps.vars.outputs.major_version }}-rc.zip
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-gms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-gms-${{ steps.vars.outputs.major_version }}-rc.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-wear-gms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-wear-gms-${{ steps.vars.outputs.major_version }}-rc.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-nogms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-internal-nogms-${{ steps.vars.outputs.major_version }}-rc.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-gms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-gms-${{ steps.vars.outputs.major_version }}-rc.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-wear-gms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-wear-gms-${{ steps.vars.outputs.major_version }}-rc.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-nogms-${{ steps.vars.outputs.major_version }}-rc.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-release-nogms-${{ steps.vars.outputs.major_version }}-rc.apk
          tag_name: ${{ steps.vars.outputs.major_version }}-rc
          name: Flipper App ${{ steps.vars.outputs.major_version }}-rc
          draft: false
          prerelease: true
