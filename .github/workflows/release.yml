name: Build and publish Release

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
      - name: Build production release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal :dumpApkVersion \
            -Dversion_code=${{ steps.buildnumber.outputs.build_number }} \
            -Dversion_name="${{ steps.vars.outputs.major_version }}" \
            -Dcountly_url="${{ secrets.COUNTLY_URL_PROD }}" \
            -Dcountly_app_key="${{ secrets.COUNTLY_APP_KEY_PROD }}" \
            -Dis_sentry_publish=true
      - name: Sign release AAB
        id: sign_aab_release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign release APK
        id: sign_apk_release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Copy artifacts
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab_release.outputs.signedReleaseFile }} artifacts/flipper-zero-release.aab
          cp ${{ steps.sign_apk_release.outputs.signedReleaseFile }} artifacts/flipper-zero-release.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-release.txt
          cp build/version/apk-version.properties artifacts/apk-version-release.properties
          echo "::set-output name=path::artifacts/"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ${{ steps.artifacts_copy.outputs.path }}
  upload_to_playstore:
    name: Upload to Play Store
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: artifacts
      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_PUBLISHER_JSON }}
          packageName: com.flipperdevices.app
          releaseFiles: ${{steps.download.outputs.download-path}}/flipper-zero-release.aab
          track: production
          mappingFile: ${{steps.download.outputs.download-path}}/mapping-release.txt
  upload_to_github:
    name: Upload to Github Releases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: artifacts
      - name: Create Production Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{steps.download.outputs.download-path}}/flipper-zero-release.aab
            ${{steps.download.outputs.download-path}}/flipper-zero-release.apk
            ${{steps.download.outputs.download-path}}/mapping-release.txt
            ${{steps.download.outputs.download-path}}/apk-version-release.properties
          tag_name: ${{ steps.vars.outputs.major_version }}
          name: Flipper App ${{ steps.vars.outputs.major_version }}
          draft: false
          prerelease: false
