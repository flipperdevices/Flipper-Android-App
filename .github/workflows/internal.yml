name: internal

on:
  push:
    branches:
      - 'dev'

jobs:
  build_number:
    name: Generate build number
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.vars.outputs.number }}
    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Set variables'
        id: vars
        run: |
          echo "::set-output name=number::${{ steps.buildnumber.outputs.build_number }}"
  build_internal_release_nogms:
    name: Build Internal AAB and APK (Without GMS)
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
          echo "::set-output name=minor_version::${{ needs.build_number.outputs.number }}"
      - name: Build internal release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal \
            -Dversion_code=${{ steps.vars.outputs.minor_version }} \
            -Dversion_name="${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=false
      - name: Sign AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Copy artifacts
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-nogms.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-nogms.txt
          echo "::set-output name=path::artifacts/"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-nogms
          path: ${{ steps.artifacts_copy.outputs.path }}
  build_internal_release_gms:
    name: Build Internal AAB and APK (GMS)
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
          echo "::set-output name=minor_version::${{ needs.build_number.outputs.number }}"
      - name: Build internal release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          ./gradlew :instances:app:assembleInternal :instances:app:bundleInternal :instances:wearable:assembleInternal :instances:wearable:bundleInternal \
            -Dversion_code=${{ steps.vars.outputs.minor_version }} \
            -Dversion_name="${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}" \
            -Dis_sentry_publish=true \
            -Dis_google_feature=true
      - name: Sign AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/app/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign Wear AAB
        id: sign_wear_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/bundle/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Sign Wear APK
        id: sign_wear_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: instances/wearable/build/outputs/apk/internal
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_ALIAS_PASSWORD }}
      - name: Copy artifacts
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.aab
          cp ${{ steps.sign_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-gms.apk
          cp instances/app/build/outputs/mapping/internal/mapping.txt artifacts/mapping-gms.txt
          cp ${{ steps.sign_wear_aab.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.aab
          cp ${{ steps.sign_wear_apk.outputs.signedReleaseFile }} artifacts/flipper-zero-wear-gms.apk
          cp instances/wearable/build/outputs/mapping/internal/mapping.txt artifacts/mapping-wear-gms.txt
          echo "::set-output name=path::artifacts/"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-gms
          path: ${{ steps.artifacts_copy.outputs.path }}
  upload_to_github:
    name: Upload to Github Releases
    runs-on: ubuntu-latest
    needs: [ build_internal_release_nogms, build_internal_release_gms, build_number ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/download-artifact@v2
        id: download-gms
        with:
          name: artifacts-gms
      - uses: actions/download-artifact@v2
        id: download-nogms
        with:
          name: artifacts-nogms
      - name: 'Set variables'
        id: vars
        run: |
          export $(cat .github/workflows/version.env | xargs)
          echo "::set-output name=major_version::${MAJOR_VERSION}"
          echo "::set-output name=minor_version::${{ needs.build_number.outputs.number }}"
      - name: Install zip
        uses: montudor/action-zip@v1
      - name: Prepare mapping
        id: mappings
        run: |
          mkdir mappings
          cp ${{steps.download-nogms.outputs.download-path}}/mapping-nogms.txt mappings/mapping-nogms.txt
          cp ${{steps.download-gms.outputs.download-path}}/mapping-gms.txt mappings/mapping-gms.txt
          cp ${{steps.download-gms.outputs.download-path}}/mapping-wear-gms.txt mappings/mapping-wear-gms.txt
          zip -qq -r mappings.zip mappings
          echo "::set-output name=archive::mappings.zip"
      - name: Copy artifacts
        id: artifacts_copy
        run: |
          mkdir artifacts
          cp ${{ steps.mappings.outputs.archive }} artifacts/mappings-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.zip
          cp ${{steps.download-gms.outputs.download-path}}/flipper-zero-gms.aab artifacts/flipper-zero-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
          cp ${{steps.download-gms.outputs.download-path}}/flipper-zero-gms.apk artifacts/flipper-zero-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
          cp ${{steps.download-gms.outputs.download-path}}/flipper-zero-wear-gms.aab artifacts/flipper-zero-wear-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
          cp ${{steps.download-gms.outputs.download-path}}/flipper-zero-wear-gms.apk artifacts/flipper-zero-wear-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
          cp ${{steps.download-nogms.outputs.download-path}}/flipper-zero-nogms.aab artifacts/flipper-zero-nogms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
          cp ${{steps.download-nogms.outputs.download-path}}/flipper-zero-nogms.apk artifacts/flipper-zero-nogms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
          echo "::set-output name=path::artifacts/"
      - name: Create internal Release
        id: create_internal_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.artifacts_copy.outputs.path }}/mappings-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.zip
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-wear-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-wear-gms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-nogms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.aab
            ${{ steps.artifacts_copy.outputs.path }}/flipper-zero-nogms-${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}.apk
          tag_name: ${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}
          name: Flipper App ${{ steps.vars.outputs.major_version }}.${{ steps.vars.outputs.minor_version }}
          draft: false
          prerelease: true
  upload_to_playstore:
    name: Upload to Play Store
    runs-on: ubuntu-latest
    needs: build_internal_release_gms
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: artifacts-gms
      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_PUBLISHER_JSON }}
          packageName: com.flipperdevices.app
          releaseFiles: |
            ${{steps.download.outputs.download-path}}/flipper-zero-gms.aab,
            ${{steps.download.outputs.download-path}}/flipper-zero-wear-gms.aab
          track: beta
          mappingFile: ${{steps.download.outputs.download-path}}/mapping-gms.txt